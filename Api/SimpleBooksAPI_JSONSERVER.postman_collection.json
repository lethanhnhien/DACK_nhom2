{
	"info": {
		"_postman_id": "146b01cb-8151-4319-be32-2ccab96c013a",
		"name": "SimpleBooksAPI_JSONSERVER",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "16764787"
	},
	"item": [
		{
			"name": "Register and Login",
			"item": [
				{
					"name": "REGISTER",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Set accessToken into collection variable', () => {\r",
									"    var res = pm.response.json();\r",
									"    //var token = res.data.access_token;\r",
									"    var email = res.data.email;\r",
									"    var password = res.data.password;\r",
									"    var username = res.data.username;\r",
									"    //pm.collectionVariables.set('token', token);\r",
									"    pm.collectionVariables.set('userName', username);\r",
									"    pm.collectionVariables.set('email', email);\r",
									"    pm.collectionVariables.set('password', password);\r",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"username\":\"chile1\",\r\n    \"email\":\"chile1@gmail.com\",\r\n    \"password\":\"chile1\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/register",
							"host": [
								"{{url}}"
							],
							"path": [
								"register"
							]
						}
					},
					"response": []
				},
				{
					"name": "REGISTER with exist email",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"if(pm.response.json().hasOwnProperty('data')) {\r",
									"    pm.test('Set accessToken into environment variable', () => {\r",
									"        var res = pm.response.json();\r",
									"        var token = res.data.access_token;\r",
									"        var email = res.data.email;\r",
									"        var password = res.data.password;\r",
									"        pm.collectionVariables.set('token', token);\r",
									"        pm.collectionVariables.set('email', email);\r",
									"        pm.collectionVariables.set('password', password);\r",
									"    })\r",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"username\":\"chile12\",\r\n    \"email\":\"chile12@gmail.com\",\r\n    \"password\":\"chile12\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/register",
							"host": [
								"{{url}}"
							],
							"path": [
								"register"
							]
						}
					},
					"response": []
				},
				{
					"name": "LOGIN ",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Set accessToken into collection variable', () => {\r",
									"    var token = pm.response.json().data.access_token;\r",
									"    console.log(token);\r",
									"    pm.collectionVariables.set('access_token', token);\r",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"email\":\"chile1@gmail.com\",\r\n    \"password\":\"chile1\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/login",
							"host": [
								"{{url}}"
							],
							"path": [
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "LOGIN  with wrong email",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"email\":\"chile12wrong@gmail.com\",\r\n    \"password\":\"chile12\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/login",
							"host": [
								"{{url}}"
							],
							"path": [
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "List of users",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/auth/users",
							"host": [
								"{{url}}"
							],
							"path": [
								"auth",
								"users"
							]
						}
					},
					"response": []
				},
				{
					"name": "Find user by email",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/auth/users/:email",
							"host": [
								"{{url}}"
							],
							"path": [
								"auth",
								"users",
								":email"
							],
							"variable": [
								{
									"key": "email",
									"value": "{{email}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete user by email",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{url}}/auth/users/:email",
							"host": [
								"{{url}}"
							],
							"path": [
								"auth",
								"users",
								":email"
							],
							"variable": [
								{
									"key": "email",
									"value": "{{email}}"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Books",
			"item": [
				{
					"name": "GET List of books",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"List of books request status\", ()=>{\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"const response = pm.response.json();\r",
									"// Only for debug\r",
									"var bookIds = _.map(pm.response.json(), 'id');\r",
									"console.log(bookIds);\r",
									"pm.globals.set(\"bookIds\", bookIds);\r",
									"for (let bookId of bookIds) {  \r",
									"    console.log(bookId);  \r",
									"}\r",
									"const randomBookId = Math.floor(Math.random() * bookIds.length);\r",
									"console.log(randomBookId, bookIds[randomBookId]);\r",
									"pm.collectionVariables.set(\"bookId\",bookIds[randomBookId]);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "",
								"value": "",
								"type": "text",
								"disabled": true
							}
						],
						"url": {
							"raw": "{{url}}/books",
							"host": [
								"{{url}}"
							],
							"path": [
								"books"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET Single book",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/books/:bookId",
							"host": [
								"{{url}}"
							],
							"path": [
								"books",
								":bookId"
							],
							"variable": [
								{
									"key": "bookId",
									"value": "{{bookId}}"
								}
							]
						}
					},
					"response": []
				}
			],
			"auth": {
				"type": "noauth"
			},
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "Orders",
			"item": [
				{
					"name": "Order A book",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.collectionVariables.set(\"orderId\", pm.response.json().data.id);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"bookId\": {{bookId}},\r\n    \"customerName\": \"{{$randomUserName}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/auth/orders",
							"host": [
								"{{url}}"
							],
							"path": [
								"auth",
								"orders"
							]
						}
					},
					"response": []
				},
				{
					"name": "Order A book false",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"bookId\": 2,\r\n    \"customerName\": \"{{$randomUserName}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/auth/orders",
							"host": [
								"{{url}}"
							],
							"path": [
								"auth",
								"orders"
							]
						}
					},
					"response": []
				},
				{
					"name": "API Get an order",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code\", ()=>{\r",
									"    pm.response.to.have.status(200);\r",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/auth/orders/:id",
							"host": [
								"{{url}}"
							],
							"path": [
								"auth",
								"orders",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{orderId}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Order",
					"request": {
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"customerName\": \"Chi {{$randomUserName}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/auth/orders/:orderId",
							"host": [
								"{{url}}"
							],
							"path": [
								"auth",
								"orders",
								":orderId"
							],
							"variable": [
								{
									"key": "orderId",
									"value": "{{orderId}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Order",
					"request": {
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/auth/orders/:id",
							"host": [
								"{{url}}"
							],
							"path": [
								"auth",
								"orders",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{orderId}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get All Order",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/auth/orders",
							"host": [
								"{{url}}"
							],
							"path": [
								"auth",
								"orders"
							]
						}
					},
					"response": []
				}
			],
			"auth": {
				"type": "bearer",
				"bearer": [
					{
						"key": "token",
						"value": "{{access_token}}",
						"type": "string"
					}
				]
			},
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					"var code = pm.response.code;",
					"",
					"if(code === 200){",
					"    pm.test(\"Status code is 200\", function () {",
					"        pm.response.to.have.status(200);",
					"    });",
					"} else if(code === 204) {",
					"    pm.test(\"Status code is 204\", function () {",
					"        pm.response.to.have.status(204);",
					"    });",
					"} else if(code === 401) {",
					"    pm.test(\"Status code is 401\", function () {",
					"        pm.response.to.have.status(401);",
					"    });",
					"}"
				]
			}
		}
	],
	"variable": [
		{
			"key": "url",
			"value": "http://localhost:3000",
			"type": "string"
		},
		{
			"key": "userName",
			"value": ""
		},
		{
			"key": "email",
			"value": ""
		},
		{
			"key": "password",
			"value": ""
		},
		{
			"key": "access_token",
			"value": ""
		},
		{
			"key": "bookId",
			"value": ""
		},
		{
			"key": "orderId",
			"value": ""
		}
	]
}